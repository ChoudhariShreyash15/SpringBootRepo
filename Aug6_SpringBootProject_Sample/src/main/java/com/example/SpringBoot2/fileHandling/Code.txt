package com.example.Aug7_SpringPractice.preactice;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.fileHandling.Files;
import java.nio.fileHandling.Path;
import java.nio.fileHandling.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class Practice {

    public static void main(String[] args) throws IOException {
        Practice practice = new Practice();
        practice.createDir();
        practice.nioDir();
    }

    public void nioDir() throws IOException {
        Path path = Paths.get("C:\\Users\\Sreenivas Bandaru\\Downloads\\Aug7_SpringPractice\\FileHandlings");
        if(!Files.exists(path))
        {
            Files.createDirectory(path);
        }
        createFileNio(path);

    }

    public void createFileNio(Path path) throws IOException {

        if(!Files.exists(path))
        {
            Path resolve = path.resolve("employee.txt");
            readNio(resolve);
//            if(!Files.exists(path))
//            {
//                Files.createFile(resolve);
//            }
//            else
//            {
//                Files.createFile(resolve);
//            }
//            readNio(path);
        }
    }

    public void readNio(Path path) throws IOException {
//        List<String> list= Arrays.asList("I LOVE INDIA");
//        Files.write(path,list, StandardCharsets.UTF_8);

        try(BufferedWriter bufferedWriter=Files.newBufferedWriter(path,StandardCharsets.UTF_8))
        {
            bufferedWriter.write("AHAHHAHHA");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }


    public void createDir() throws IOException {
        File fileHandling = new File("C:\\Users\\Sreenivas Bandaru\\Downloads\\Aug7_SpringPractice\\FileHandling");

        if (!fileHandling.exists()) {
            fileHandling.mkdir();
        } else {
            System.out.println("Directory already present");
        }

        createFile(fileHandling.getAbsolutePath());
    }

    public void createFile(String path) throws IOException {
        File fileHandling=new File(path+"\\person.txt");
        System.out.println(fileHandling.getAbsoluteFile());
        System.out.println(fileHandling.getPath());
//        if(!fileHandling.exists())
//        {
//            fileHandling.createNewFile();
//        }
//        else
//        {
//            System.out.println("File is already present");
//        }
        writeIntoFile(fileHandling);
        buffer(fileHandling);
        readFromBuffer(fileHandling);
    }

    public void writeIntoFile(File fileHandling)
    {
        try(FileWriter fileWriter=new FileWriter(fileHandling))
        {
            fileWriter.write("Hello world!");
            fileWriter.write("Asia");
            fileWriter.write(System.lineSeparator());
            fileWriter.write("India");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        readFile(fileHandling);
    }

    public void readFile(File fileHandling)
    {
        try(FileReader fileReader=new FileReader(fileHandling))
        {
            Scanner scanner=new Scanner(fileReader);
            while(scanner.hasNextLine())
            {
                System.out.println(scanner.nextLine());
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public void buffer(File fileHandling)
    {
        try(BufferedWriter bufferedWriter=new BufferedWriter(new FileWriter(fileHandling,true)))
        {
            bufferedWriter.write(System.lineSeparator());
            bufferedWriter.write("Hellow ,.....");
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public void readFromBuffer(File fileHandling)
    {
        try(BufferedReader bufferedReader=new BufferedReader(new FileReader(fileHandling)))
        {
            String line;
            while((line=bufferedReader.readLine())!=null)
            {
                System.out.println(line);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}